// Code generated by protoc-gen-go. DO NOT EDIT.
// source: StickerResources.proto

package signalservice

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Pack struct {
	Title                *string         `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Author               *string         `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	Cover                *Pack_Sticker   `protobuf:"bytes,3,opt,name=cover" json:"cover,omitempty"`
	Stickers             []*Pack_Sticker `protobuf:"bytes,4,rep,name=stickers" json:"stickers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Pack) Reset()         { *m = Pack{} }
func (m *Pack) String() string { return proto.CompactTextString(m) }
func (*Pack) ProtoMessage()    {}
func (*Pack) Descriptor() ([]byte, []int) {
	return fileDescriptor_61d9ca4c7de4706f, []int{0}
}

func (m *Pack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pack.Unmarshal(m, b)
}
func (m *Pack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pack.Marshal(b, m, deterministic)
}
func (m *Pack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pack.Merge(m, src)
}
func (m *Pack) XXX_Size() int {
	return xxx_messageInfo_Pack.Size(m)
}
func (m *Pack) XXX_DiscardUnknown() {
	xxx_messageInfo_Pack.DiscardUnknown(m)
}

var xxx_messageInfo_Pack proto.InternalMessageInfo

func (m *Pack) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Pack) GetAuthor() string {
	if m != nil && m.Author != nil {
		return *m.Author
	}
	return ""
}

func (m *Pack) GetCover() *Pack_Sticker {
	if m != nil {
		return m.Cover
	}
	return nil
}

func (m *Pack) GetStickers() []*Pack_Sticker {
	if m != nil {
		return m.Stickers
	}
	return nil
}

type Pack_Sticker struct {
	Id                   *uint32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Emoji                *string  `protobuf:"bytes,2,opt,name=emoji" json:"emoji,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pack_Sticker) Reset()         { *m = Pack_Sticker{} }
func (m *Pack_Sticker) String() string { return proto.CompactTextString(m) }
func (*Pack_Sticker) ProtoMessage()    {}
func (*Pack_Sticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_61d9ca4c7de4706f, []int{0, 0}
}

func (m *Pack_Sticker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pack_Sticker.Unmarshal(m, b)
}
func (m *Pack_Sticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pack_Sticker.Marshal(b, m, deterministic)
}
func (m *Pack_Sticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pack_Sticker.Merge(m, src)
}
func (m *Pack_Sticker) XXX_Size() int {
	return xxx_messageInfo_Pack_Sticker.Size(m)
}
func (m *Pack_Sticker) XXX_DiscardUnknown() {
	xxx_messageInfo_Pack_Sticker.DiscardUnknown(m)
}

var xxx_messageInfo_Pack_Sticker proto.InternalMessageInfo

func (m *Pack_Sticker) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Pack_Sticker) GetEmoji() string {
	if m != nil && m.Emoji != nil {
		return *m.Emoji
	}
	return ""
}

func init() {
	proto.RegisterType((*Pack)(nil), "signalservice.Pack")
	proto.RegisterType((*Pack_Sticker)(nil), "signalservice.Pack.Sticker")
}

func init() { proto.RegisterFile("StickerResources.proto", fileDescriptor_61d9ca4c7de4706f) }

var fileDescriptor_61d9ca4c7de4706f = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xcd, 0x4e, 0xc3, 0x30,
	0x10, 0x84, 0xe5, 0xb4, 0xe5, 0x67, 0x51, 0x38, 0x58, 0xa8, 0xb2, 0xe0, 0x12, 0x71, 0xea, 0xc9,
	0xa8, 0x5c, 0xb8, 0xe7, 0x09, 0xaa, 0xf0, 0x04, 0x96, 0xbb, 0x6a, 0x97, 0xa6, 0x71, 0xb4, 0xeb,
	0x04, 0xf1, 0x98, 0xbc, 0x11, 0x4a, 0x6c, 0x90, 0xe0, 0xc2, 0x71, 0x46, 0xb3, 0x33, 0x9f, 0x16,
	0xd6, 0xaf, 0x91, 0xfc, 0x09, 0xb9, 0x41, 0x09, 0x03, 0x7b, 0x14, 0xdb, 0x73, 0x88, 0x41, 0x97,
	0x42, 0x87, 0xce, 0xb5, 0x82, 0x3c, 0x92, 0xc7, 0xc7, 0x4f, 0x05, 0xcb, 0x9d, 0xf3, 0x27, 0x7d,
	0x07, 0xab, 0x48, 0xb1, 0x45, 0xa3, 0x2a, 0xb5, 0xb9, 0x6e, 0x92, 0xd0, 0x6b, 0xb8, 0x70, 0x43,
	0x3c, 0x06, 0x36, 0xc5, 0x6c, 0x67, 0xa5, 0xb7, 0xb0, 0xf2, 0x61, 0x44, 0x36, 0x8b, 0x4a, 0x6d,
	0x6e, 0x9e, 0x1f, 0xec, 0xaf, 0x56, 0x3b, 0x35, 0xda, 0x6f, 0x80, 0x94, 0xd4, 0x2f, 0x70, 0x25,
	0xc9, 0x11, 0xb3, 0xac, 0x16, 0xff, 0x5d, 0xfd, 0x84, 0xef, 0x9f, 0xe0, 0x32, 0x9b, 0xfa, 0x16,
	0x0a, 0xda, 0xcf, 0x84, 0x65, 0x53, 0xd0, 0x7e, 0x82, 0xc6, 0x73, 0x78, 0xa3, 0x4c, 0x97, 0x44,
	0x5d, 0xc3, 0x36, 0xf0, 0xc1, 0xbe, 0x1f, 0x49, 0x7a, 0x64, 0xf9, 0x90, 0x88, 0x67, 0xf9, 0xb3,
	0x45, 0x5d, 0x44, 0xee, 0x5c, 0x6b, 0xf3, 0x4c, 0x5d, 0xe6, 0x8d, 0xdd, 0xf4, 0x25, 0xf9, 0x0a,
	0x00, 0x00, 0xff, 0xff, 0xad, 0xa7, 0xbf, 0x08, 0x3f, 0x01, 0x00, 0x00,
}
